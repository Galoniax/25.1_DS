openapi: 3.0.0
info:
  title: Sistema de Equipo de Marketing
  version: 1.0.0
  description: "Esta documentación de Interfaz, declara los posibles endpoints de la API del sistema de equipo de marketing. \n\n Se presentarán algunos ejemplos de posibles peticiones y respuestas que puede realizar el cliente (equipo marketing) desde la capa Frontend. \n\n De paso se presentará la estructura de los datos que se espera recibir y enviar."

tags:
  - name: Auth
    description: Autenticación de usuarios
  - name: Upload
    description: Subida de archivos
  - name: Venta
    description: Gestión de ventas
  - name: Categoria
    description: Gestión de categorias
  
  

paths:
  /api/v1/auth/login:
    post:
      tags: [Auth]
      summary: Autenticación de usuario
      description: Este endpoint permite autenticar a un usuario utilizando sus credenciales. La respuesta incluirá un token de autenticación.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Correo electrónico del usuario
                password:
                  type: string
                  description: Contraseña del usuario
              required:
                - email
                - password
      responses:
        '200':
          description: Autenticación exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token de autenticación JWT
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZF91c2VyIjo1LCJlbWFpbCI6InN1Y3Vyc2FsQGVtcHJlc2EuY29tIiwicm9sZSI6InN1Y3Vyc2FsIiwiaWF0IjoxNzUxNTUyMzE1LCJleHAiOjE3NTE2Mzg3MTV9.2qGe3Z3NcglMmpOvtv0mV9IPiROviJdCITcY_HeSFns
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error
              example:
                message: "El email no está registrado o Contraseña incorrecta" 
        '500':
          description: Error interno del servidor

  /api/v1/auth/register:
    post:
      tags: [Auth]
      summary: Registro de usuario
      description: Este endpoint permite registrar un nuevo usuario. La respuesta incluirá un token de autenticación.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Correo electrónico del usuario
                password:
                  type: string
                  description: Contraseña del usuario
                role:
                  type: string
                  description: Rol del usuario
                id_sucursal:
                  type: integer
                  description: ID de la sucursal del usuario
              required:
                - email
                - password
                - role
      responses:
        '201':
          description: Registro exitoso
          content:
            application/json:
              schema:
                type: object
              example:
                id_user: 1
                email: "sucursal@empresa.com"
                password: "admin123"
                role: "sucursal"
                id_sucursal: 1
        '409':
          description: El email ya esta registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error
              example:
                message: "El email ya esta registrado"
        '400':
          description: Datos faltantes o Rol no permitido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error
              example:
                message: "Faltan datos requeridos o Rol no permitido"
        '500':
          description: Error interno del servidor      

  /api/v1/upload/:
    post:
      tags: [Upload]
      summary: Subida de archivos
      description: Este endpoint permite subir archivos al servidor. La respuesta incluirá un mensaje de confirmación.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        '200':
          description: Archivo subido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Mensaje de confirmación
                  message:
                    type: string
                    description: Mensaje de confirmación
                  data: 
                    type: object
                    properties:
                      archivo:
                        type: string
                        description: Nombre del archivo
                        example: "archivo.csv"
                        required: true
                      procesados:   
                        type: integer
                        description: Cantidad de registros procesados
                        example: 10
                        required: true
                      duplicados:
                        type: integer
                        description: Cantidad de registros duplicados
                        example: 0
                        required: true
                      total: 
                        type: integer
                        description: Cantidad total de registros
                        example: 10
                        required: true
              example:
                success: "true"
                message: "Archivo procesado exitosamente"
                data:
                  archivo: "archivo.csv"
                  procesados: 10
                  duplicados: 0
                  total: 10
        '400':
          description: Archivo no subido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Mensaje de confirmación
                  message:
                    type: string
                    description: Mensaje de confirmación
              example:
                success: "false"
                message: "No se proporcionó ningún archivo"
        '500':
          description: Error interno del servidor
  
  /api/v1/categorias/:
    get:
      tags: [Categoria]
      summary: Obtener todas las categorias registradas en la base de datos
      description: Este endpoint permite obtener todas las categorias registradas en la base de datos. La respuesta incluirá una lista de objetos de categoria.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoriaProducto'
        '404':
          description: Categorias no encontradas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error
              example:
                message: "Categorias no encontradas."
        '500':
          description: Error interno del servidor
  
  /api/v1/categorias/{id}:
    get:
      tags: [Categoria]
      summary: Obtener una categoria por su ID
      description: Este endpoint permite obtener una categoria por su ID. La respuesta incluirá un objeto de categoria.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriaProducto'
              example:
                id_categoria_producto: 1 
                nombre: "Categoria 1"
                productos: 
                  id_producto: 1
                  id_categoria_producto: 1
                  nombre: "Producto 1"
                  precio: 100
                  description: "Descripción del producto 1"
                  activo: true                               
        '404':
          description: Categoria no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error
              example:
                message: "Categoria no encontrada."
        '500':
          description: Error interno del servidor

  /api/v1/categorias/create:
    post:
      tags: [Categoria]
      summary: Crear una nueva categoria
      description: Este endpoint permite crear una nueva categoria. La respuesta incluirá un objeto de categoria.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaProducto'
              required: 
                - nombre
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriaProducto'
              example:
                id_categoria_producto: 1 
                nombre: "Categoria 1"
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error
              example:
                message: "Categoria no creada."
        '500':
          description: Error interno del servidor

  /api/v1/ventas:
    get:
      tags: [Venta]
      summary: Obtener todas las ventas registradas en la base de datos
      description: Este endpoint permite obtener todas las ventas registradas en la base de datos. La respuesta incluirá una lista de objetos de venta.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Venta'
              example:
                - id_venta: 1
                  id_cliente: 1
                  id_sucursal: 1
                  fecha: "2023-10-01T12:00:00Z"
                  total: 100.50
                - id_venta: 2
                  id_cliente: 2
                  id_sucursal: 2
                  fecha: "2023-10-02T14:30:00Z"
                  total: 200.75
        '404':
          description: No se encontraron ventas
        '500':
          description: Error interno del servidor

  /api/v1/ventas/{id}:
    get:
      tags: [Venta]
      summary: Obtener una venta por su ID
      description: Este endpoint permite obtener los datos de una venta específica utilizando su ID. La respuesta incluirá un objeto de venta con sus detalles.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VentaDetallada'
              example:
                id_venta: 12
                id_cliente: 4
                id_sucursal: 5
                fecha: "2025-08-10T15:30:00.000Z"
                total: 300.00
                productos:
                  - id_venta_producto: 1
                    id_venta: 12
                    id_producto: 1
                    id_movimiento_stock: 302
                    nombre_producto: "Producto A"
                    cantidad: 1
                    precio_unitario: 150.00
                    producto:
                      id_producto: 1
                      nombre: "Producto A"
                      precio: 150.00
                      description: "Descripción del producto A"
                      activo: true
                  - id_venta_producto: 2
                    id_venta: 12
                    id_producto: 2
                    id_movimiento_stock: 303
                    nombre_producto: "Producto B"
                    cantidad: 1
                    precio_unitario: 150.00
                    producto:
                      id_producto: 2
                      nombre: "Producto B"
                      precio: 150.00
                      description: "Descripción del producto B"
                      activo: true
                sucursal:
                  id_sucursal: 5
                  nombre: "Sucursal 5"
                  ubicacion: "Calle 5, Ciudad 5"
        '404':
          description: Venta no encontrada
        '500':
          description: Error interno del servidor
         
  /api/v1/ventas/sucursal/{id_sucursal}:
    get:
      tags: [Venta]
      summary: Obtener ventas por sucursal
      description: Este endpoint permite obtener todas las ventas de una sucursal específica utilizando su ID. La respuesta incluirá una lista de objetos de venta.
      parameters:
        - in: path
          name: id_sucursal
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Venta'
        '404':
          description: No se encontraron ventas para la sucursal especificada
        '500':
          description: Error interno del servidor

components:
  schemas:
    User:
      type: object
      properties:
        id_user:
          type: integer
        email:
          type: string
        password:
          type: string
        role:
          type: enum [sucursal, marketing]
        id_sucursal:
          type: integer
    
    CategoriaProducto:
      type: object
      properties:
        id_categoria_producto:
          type: integer
        nombre:
          type: string
        productos:
          type: array
          items:
            $ref: '#/components/schemas/Producto'

    Venta:
      type: object
      properties:
        id_venta:
          type: integer
        id_cliente:
          type: integer
        id_sucursal:
          type: integer
        fecha:
          type: string
          format: date-time
        total:
          type: number
          format: float

    VentaDetallada:
      type: object
      properties:
        id_venta:
          type: integer
        id_cliente:
          type: integer
        id_sucursal:
          type: integer
        fecha:
          type: string
          format: date-time
        total:
          type: number
          format: float
        productos:
          type: array
          items:
            $ref: '#/components/schemas/VentaProducto'
        sucursal:
          $ref: '#/components/schemas/Sucursal'

    VentaProducto:
      type: object
      properties:
        id_venta_producto:
          type: integer
        id_venta:
          type: integer
        id_producto:
          type: integer
        id_movimiento_stock:
          type: integer
        nombre_producto:
          type: string
        cantidad:
          type: integer
        precio_unitario:
          type: number
          format: float
        producto:
          $ref: '#/components/schemas/Producto'

    Producto:
      type: object
      properties:
        id_producto:
          type: integer
        id_categoria_producto:
          type: integer
        nombre:
          type: string
        precio:
          type: number
          format: float
        description:
          type: string
        activo:
          type: boolean

    Sucursal:
      type: object
      properties:
        id_sucursal:
          type: integer
        nombre:
          type: string
        ubicacion:
          type: string
        activo:
          type: boolean
        fuenteDatos:
          type: object
          $ref: '#/components/schemas/FuenteDatos'
        ventas:
          type: array
          items:
            $ref: '#/components/schemas/Venta'
        
    
    FuenteDatos:
      type: object
      properties:
        id_fuente:
          type: integer
        id_sucursal:
          type: integer
        tipo: 
          type: string
        configuracion:
          type: json
        updated_at:
          type: datetime

    Reporte: 
      type: object
      properties:
        id_reporte:
          type: integer
        fecha_creacion:
          type: datetime
        nombre_archivo:
          type: string
        registros:
          type: integer
        peso_archivo:
          type: integer
        id_sucursal:
          type: integer
        
